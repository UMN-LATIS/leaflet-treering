{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\JThorneUMN\\\\Documents\\\\GitHub\\\\leaflet-treering\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"C:\\\\Users\\\\JThorneUMN\\\\Documents\\\\GitHub\\\\leaflet-treering\",\"filename\":\"C:\\\\Users\\\\JThorneUMN\\\\Documents\\\\GitHub\\\\leaflet-treering\\\\scratch.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"C:\\\\Users\\\\JThorneUMN\\\\Documents\\\\GitHub\\\\leaflet-treering\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.14:production": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\JThorneUMN\\Documents\\GitHub\\leaflet-treering\\",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "C:\\Users\\JThorneUMN\\Documents\\GitHub\\leaflet-treering",
      "filename": "C:\\Users\\JThorneUMN\\Documents\\GitHub\\leaflet-treering\\scratch.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "browserslistConfigFile": false,
      "envName": "production",
      "root": "C:\\Users\\JThorneUMN\\Documents\\GitHub\\leaflet-treering",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\JThorneUMN\\Documents\\GitHub\\leaflet-treering\\scratch.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\JThorneUMN\\Documents\\GitHub\\leaflet-treering\\scratch.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\JThorneUMN\\Documents\\GitHub\\leaflet-treering\\",
        "sourceFileName": "scratch.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar x = [2, 1, 5, 9, 3];\n\nfunction order(a) {\n  var a_sort = JSON.parse(JSON.stringify(a)).sort();\n  var a_index = [];\n\n  for (let i of a_sort) {\n    let index = a.indexOf(i);\n    a_index.push(index);\n  }\n\n  return a_index;\n}\n\nfunction pmax(a, int) {\n  var a_max = [];\n\n  for (let i of a) {\n    if (i > int) {\n      a_max.push(i);\n    } else {\n      a_max.push(int);\n    }\n  }\n\n  return a_max;\n}\n\nfunction array_as_index(a, ind) {\n  var a_new = new Array(a.length);\n\n  for (let i = 0; i < a.length; i++) {\n    a_new[i] = a[ind[i]];\n  }\n\n  return a_new;\n}\n\nfunction array_operation(a1, a2, operator) {\n  switch (operator) {\n    case '+':\n      var a_new = a1.map(function (e, i) {\n        return e + a2[i];\n      });\n      break;\n\n    case '-':\n      var a_new = a1.map(function (e, i) {\n        return e - a2[i];\n      });\n      break;\n\n    case '*':\n      var a_new = a1.map(function (e, i) {\n        return e * a2[i];\n      });\n      break;\n\n    case '=':\n      var a_new = a1.map(function (e, i) {\n        return e = a2[i];\n      });\n      break;\n  }\n\n  return a_new;\n}\n\nfunction which(a, int, operator) {\n  var a_index = [];\n\n  switch (operator) {\n    case '>':\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] > int) {\n          a_index.push(i);\n        }\n\n        ;\n      }\n\n      ;\n      break;\n\n    case '<=':\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] <= int) {\n          a_index.push(i);\n        }\n\n        ;\n      }\n\n      ;\n      break;\n  }\n\n  return a_index;\n}\n\nfunction seq_along(a) {\n  var seq_al = [];\n\n  for (let i in a) {\n    seq_al.push(parseInt(i) + 1);\n  }\n\n  return seq_al;\n}\n\nfunction seq(from, to, length) {\n  var seq_ = [];\n\n  if (length) {\n    var step = (to - from) / length;\n  } else {\n    var step = 1;\n  }\n\n  for (var i = from; i <= to; i = i + step) {\n    let num = Math.round((i + Number.EPSILON) * 1000) / 1000;\n    seq_.push(num);\n  }\n\n  return seq_;\n}\n\nfunction matrix(ele, r, c) {\n  var outer_shell = [];\n\n  for (var i = 0; i < c; i++) {\n    var inner_shell = [];\n\n    for (var j = 0; j < r; j++) {\n      inner_shell.push(ele);\n    }\n\n    outer_shell.push(inner_shell);\n  }\n\n  return outer_shell;\n}\n\nfunction findPivotRow(sys, index) {\n  //Pivotal consensation\n  var row = index;\n\n  for (var i = index; i < sys.length; i++) if (Math.abs(sys[i][index]) > Math.abs(sys[row][index])) row = i;\n\n  if (sys[row][index] == 0) return false;\n  return row;\n}\n\nfunction swapRows(sys, row1, row2) {\n  var cache = sys[row1];\n  sys[row1] = sys[row2];\n  sys[row2] = cache;\n  return sys;\n}\n\nfunction checkInput(coeff, con) {\n  //Coefficients and constants\n  if (coeff.length != con.length) return false;\n\n  for (var i = 0; i < coeff.length; i++) {\n    if (coeff[i].length != con.length) return false;\n  }\n\n  return true;\n}\n\nfunction solve(A, B) {\n  //Solve Ax=B\n  if (!checkInput(A, B)) return false;\n  var system = A.slice();\n\n  for (var i = 0; i < B.length; i++) system[i].push(B[i]);\n\n  for (var i = 0; i < system.length; i++) {\n    var pivotRow = findPivotRow(system, i);\n    if (!pivotRow) return false; //Singular system\n\n    if (pivotRow != i) system = swapRows(system, i, pivotRow);\n    var pivot = system[i][i];\n\n    for (var j = i; j < system[i].length; j++) {\n      //divide row by pivot\n      system[i][j] = system[i][j] / pivot;\n    }\n\n    for (var j = i + 1; j < system.length; j++) {\n      //Cancel bellow pivot\n      if (system[j][i] != 0) {\n        var operable = system[j][i];\n\n        for (var k = i; k < system[i].length; k++) {\n          system[j][k] -= operable * system[i][k];\n        }\n      }\n    } //Matriz Echelon\n\n  }\n\n  for (var i = system.length - 1; i > 0; i--) {\n    //Back substitution\n    for (var j = i - 1; j >= 0; j--) {\n      if (system[j][i] != 0) {\n        var operable = system[j][i];\n\n        for (var k = j; k < system[j].length; k++) {\n          system[j][k] -= operable * system[i][k];\n        }\n      }\n    }\n  }\n\n  var answer = [];\n\n  for (var i = 0; i < system.length; i++) {\n    answer.push(system[i].pop());\n  }\n\n  return answer;\n} // return cross product of 2 arrays (vectors)\n\n\nfunction cross_prod(a1, a2) {\n  var val = 0;\n\n  for (let i = 0; i < a1.length; i++) {\n    val = val + a1[i] * a2[i];\n  }\n\n  return val;\n} // return a matrix array which is the cross product of the inputted matrix array and its transpose\n\n\nfunction tcrossprod(m) {\n  // m format : [[col 1], [col 1], ...]\n  // need to reformat so rows are nested arrays\n  var m_reform = [];\n\n  for (let i = 0; i < m.length; i++) {\n    var row_reform = [];\n\n    for (let j = 0; j < m.length; j++) {\n      row_reform.push(m[j][i]);\n    }\n\n    m_reform.push(row_reform);\n  }\n\n  m = m_reform; // m_transpose format : mT = m = [[row 1], [row 2], ]\n  // for transpose rows become columns\n\n  var mT = JSON.parse(JSON.stringify(m));\n  var m_new = [];\n\n  for (let i = 0; i < m.length; i++) {\n    let new_col = [];\n\n    for (let j = 0; j < m.length; j++) {\n      new_col.push(cross_prod(m[i], mT[j]));\n    }\n\n    m_new.push(new_col);\n  }\n\n  return m_new;\n}\n\nvar m1 = [[1, 4, 7], [2, 5, 8], [3, 6, 9]];\nvar m2 = [[1, 4, 7], [2, 5, 8], [3, 6, 9]];\n\nfunction matrix_operation(m1, m2, operator) {\n  switch (operator) {\n    case '+':\n      var m_new = m1.map(function (e, i) {\n        var col = m1[i].map(function (e, j) {\n          return e + m2[i][j];\n        });\n        return col;\n      });\n      break;\n\n    case '-':\n      var m_new = m1.map(function (e, i) {\n        var col = m1[i].map(function (e, j) {\n          return e - m2[i][j];\n        });\n        return col;\n      });\n      break;\n  }\n\n  return m_new;\n}\n\nfunction numeric(m) {\n  var n = [];\n\n  for (let i = 0; i < m.length; i++) {\n    for (let j = 0; j < m[0].length; j++) {\n      n.push(m[i][j]);\n    }\n  }\n\n  return n;\n}\n\nfunction y(a, b) {\n  return a + b;\n}\n\nconsole.log(y(1 + 2, 3));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "scratch.js"
      ],
      "names": [
        "x",
        "order",
        "a",
        "a_sort",
        "JSON",
        "parse",
        "stringify",
        "sort",
        "a_index",
        "i",
        "index",
        "indexOf",
        "push",
        "pmax",
        "int",
        "a_max",
        "array_as_index",
        "ind",
        "a_new",
        "Array",
        "length",
        "array_operation",
        "a1",
        "a2",
        "operator",
        "map",
        "e",
        "which",
        "seq_along",
        "seq_al",
        "parseInt",
        "seq",
        "from",
        "to",
        "seq_",
        "step",
        "num",
        "Math",
        "round",
        "Number",
        "EPSILON",
        "matrix",
        "ele",
        "r",
        "c",
        "outer_shell",
        "inner_shell",
        "j",
        "findPivotRow",
        "sys",
        "row",
        "abs",
        "swapRows",
        "row1",
        "row2",
        "cache",
        "checkInput",
        "coeff",
        "con",
        "solve",
        "A",
        "B",
        "system",
        "slice",
        "pivotRow",
        "pivot",
        "operable",
        "k",
        "answer",
        "pop",
        "cross_prod",
        "val",
        "tcrossprod",
        "m",
        "m_reform",
        "row_reform",
        "mT",
        "m_new",
        "new_col",
        "m1",
        "m2",
        "matrix_operation",
        "col",
        "numeric",
        "n",
        "y",
        "b",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\JThorneUMN\\Documents\\GitHub\\leaflet-treering\\",
      "sourcesContent": [
        "var x = [2, 1, 5, 9, 3];\n\nfunction order (a) {\n  var a_sort = JSON.parse(JSON.stringify(a)).sort();\n  var a_index = [];\n  for (let i of a_sort) {\n    let index = a.indexOf(i);\n    a_index.push(index);\n  }\n  return a_index\n}\n\nfunction pmax (a, int) {\n  var a_max = [];\n  for (let i of a) {\n    if (i > int) {\n      a_max.push(i);\n    } else {\n      a_max.push(int);\n    }\n  }\n  return a_max\n}\n\nfunction array_as_index (a, ind) {\n  var a_new = new Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    a_new[i] = a[ind[i]];\n  }\n  return a_new\n}\n\nfunction array_operation (a1, a2, operator) {\n  switch (operator) {\n    case '+': var a_new = a1.map( function (e, i) {\n                return e + a2[i]\n              }); break;\n    case '-': var a_new = a1.map( function (e, i) {\n                return e - a2[i]\n              }); break;\n    case '*': var a_new = a1.map( function (e, i) {\n                return e * a2[i]\n              }); break;\n    case '=': var a_new = a1.map( function (e, i) {\n                return e = a2[i]\n              }); break;\n  }\n  return a_new\n}\n\nfunction which (a, int, operator) {\n  var a_index = [];\n  switch (operator) {\n    case '>': for (let i = 0; i < a.length; i++) {\n                if (a[i] > int) {\n                  a_index.push(i);\n                };\n              }; break;\n    case '<=': for (let i = 0; i < a.length; i++) {\n                if (a[i] <= int) {\n                  a_index.push(i);\n                };\n              }; break;\n  }\n  return a_index\n}\n\nfunction seq_along (a) {\n  var seq_al = [];\n  for (let i in a) {\n    seq_al.push(parseInt(i) + 1);\n  }\n  return seq_al\n}\n\nfunction seq (from, to, length) {\n  var seq_ = [];\n  if (length) {\n    var step = (to - from) / length;\n  } else {\n    var step = 1;\n  }\n  for (var i = from; i <= to; i = i + step) {\n    let num = Math.round((i + Number.EPSILON) * 1000) / 1000;\n    seq_.push(num);\n  }\n  return seq_\n}\n\nfunction matrix (ele, r, c) {\n  var outer_shell = [];\n  for (var i = 0; i < c; i++) {\n    var inner_shell = [];\n    for (var j = 0; j < r; j++) {\n      inner_shell.push(ele);\n    }\n    outer_shell.push(inner_shell);\n  }\n  return outer_shell\n}\n\nfunction findPivotRow(sys, index){ //Pivotal consensation\n    var row = index;\n    for(var i = index ; i < sys.length; i++)\n        if(Math.abs(sys[i][index]) > Math.abs(sys[row][index]))\n            row = i;\n    if(sys[row][index] == 0)\n        return false;\n    return row\n}\n\nfunction swapRows(sys, row1, row2){\n   var cache = sys[row1];\n   sys[row1] = sys[row2];\n   sys[row2] = cache;\n   return sys;\n}\n\nfunction checkInput(coeff, con){ //Coefficients and constants\n    if(coeff.length != con.length)\n        return false;\n    for(var i = 0;i < coeff.length;i++){\n        if(coeff[i].length != con.length)\n            return false;\n    }\n    return true;\n}\n\nfunction solve (A,B) { //Solve Ax=B\n  if(!checkInput(A,B))\n      return false;\n  var system = A.slice();\n  for(var i = 0;i < B.length; i++)\n      system[i].push(B[i]);\n\n  for(var i = 0;i < system.length ;i++){\n      var pivotRow = findPivotRow(system,i);\n      if(!pivotRow)\n          return false; //Singular system\n      if(pivotRow != i)\n          system = swapRows(system,i,pivotRow)\n      var pivot = system[i][i];\n      for(var j = i; j < system[i].length;j++){  //divide row by pivot\n          system[i][j] = system[i][j]/pivot;\n      }\n      for(var j = i + 1;j < system.length ; j++){ //Cancel bellow pivot\n          if(system[j][i] != 0){\n              var operable = system[j][i];\n              for(var k = i; k < system[i].length; k++){\n                  system[j][k] -= operable*system[i][k];\n              }\n          }\n      } //Matriz Echelon\n  }\n  for(var i = system.length -1; i > 0 ;i--){ //Back substitution\n      for(var j = i - 1; j>= 0; j--){\n          if(system[j][i] != 0){\n              var operable = system[j][i];\n              for(var k = j; k < system[j].length; k++){\n                  system[j][k] -= operable*system[i][k];\n              }\n          }\n      }\n  }\n  var answer = [];\n  for(var i = 0;i < system.length;i++){\n      answer.push(system[i].pop())\n  }\n  return answer;\n}\n\n// return cross product of 2 arrays (vectors)\nfunction cross_prod (a1, a2) {\n  var val = 0;\n  for (let i = 0; i < a1.length; i++) {\n    val = val + (a1[i] * a2[i]);\n  }\n  return val\n}\n\n// return a matrix array which is the cross product of the inputted matrix array and its transpose\nfunction tcrossprod (m) {\n  // m format : [[col 1], [col 1], ...]\n  // need to reformat so rows are nested arrays\n  var m_reform = [];\n  for (let i = 0; i < m.length; i++) {\n    var row_reform = [];\n    for (let j = 0; j < m.length; j++) {\n      row_reform.push(m[j][i]);\n    }\n    m_reform.push(row_reform);\n  }\n  m = m_reform;\n\n  // m_transpose format : mT = m = [[row 1], [row 2], ]\n  // for transpose rows become columns\n  var mT = JSON.parse(JSON.stringify(m));\n  var m_new = [];\n  for (let i = 0; i < m.length; i++) {\n    let new_col = [];\n    for (let j = 0; j < m.length; j++) {\n      new_col.push(cross_prod(m[i], mT[j]));\n    }\n    m_new.push(new_col);\n  }\n  return m_new;\n}\n\nvar m1 = [[1,4,7],[2,5,8],[3,6,9]];\nvar m2 = [[1,4,7],[2,5,8],[3,6,9]];\n\nfunction matrix_operation (m1, m2, operator) {\n  switch (operator) {\n    case '+': var m_new =\n                  m1.map( function (e, i) {\n                    var col = m1[i].map (function (e, j) {\n                                 return e + m2[i][j]\n                              });\n                    return col\n                  }); break;\n    case '-': var m_new =\n                  m1.map( function (e, i) {\n                    var col = m1[i].map (function (e, j) {\n                                 return e - m2[i][j]\n                              });\n                    return col\n                  }); break;\n  }\n  return m_new\n}\n\nfunction numeric (m) {\n  var n = []\n  for (let i = 0; i < m.length; i++) {\n    for (let j = 0; j < m[0].length; j++) {\n      n.push(m[i][j]);\n    }\n  }\n  return n\n}\n\nfunction y (a, b) {\n  return a + b\n}\n\nconsole.log(y(1+2, 3))\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1625170969378
  }
}